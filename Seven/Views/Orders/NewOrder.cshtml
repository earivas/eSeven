@model Seven.Models.ViewModels.OrderView

@{
    ViewBag.Title = "NewOrder";
}

<h2>New Order</h2>
<h3>@ViewBag.Error</h3>
<h3>@ViewBag.Message</h3>

@using (Html.BeginForm("NewOrder","Orders",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">  
            @Html.LabelFor(model => model.ModelPerson.ModelID, "ModelID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModelPerson.ModelID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Order.OrderDate, "OrderDate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                

                @Html.EditorFor(model => model.Order.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
          @Html.ActionLink("Add Detail", "AddDetail", new { }, new { @class= "btn btn-primary" }) 
          @*@*<a  data-toggle="modal" data-target="#myModal" class = "btn btn-success " >Add Detail</a>*@
          @*<a href="#myModal" id="AddButton"  class="btn btn-success"  data-toggle="modal">Add Detail</a>*@
         <input type="submit" value="Save Order" id="NewOrder" class="btn btn-success" />
 </div>
  

}

<h2>Order Details</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Order.PageName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order.TipValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order.QtyTokens)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order.Total)
        </th>
       
    </tr>

    @for (int i = 0; i < Model.Pages.Count; i++)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model.Pages[i].PageName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Pages[i].TipValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Pages[i].QtyTokens)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Pages[i].Total)
            </td>
            
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Pages[i].PageID })    
                @Html.ActionLink("Delete", "Delete", new { id = Model.Pages[i].PageID})
            </td>
        </tr>
    }

</table>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <div id="modal-content">
                    cargamdo...
                </div>
           
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="~/Scripts/Order/Order.js"></script>
}
